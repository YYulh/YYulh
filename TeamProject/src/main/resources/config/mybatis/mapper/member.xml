<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	
	<select id="selectList" parameterType="int" resultType="vo.MemberVO" >
		<![CDATA[
			select mb_no,grade_name,mb_id,mb_pw,mb_name,mb_resi1,mb_resi2,mb_email1,mb_email2,mb_post,mb_detailaddr,mb_tel1,mb_tel2,mb_tel3,
			mb_date,mb_bir,mb_type,mb_point,mb_tp,mb_rcid,mb_sms,mb_ckmail from (select rownum rn,members.*,grade.grade_name from members,grade where members.grade_no = grade.grade_no order by members.mb_no asc) where rn >=#{start} and rn <= #{start} + 49 and mb_leave =0	
		]]>
	</select>

	<select id="getTotal" resultType="int">
		select count(*) from members 
	</select>
	
	<select id="selectGrade" resultType="vo.GradeVO">
		select * from grade order by grade_no asc
	</select>
	
	<select id="selectLeaveList" parameterType="int" resultType="vo.MemberVO" >
		<![CDATA[
			select mb_no,grade_name,mb_id,mb_pw,mb_name,mb_resi1,mb_resi2,mb_email1,mb_email2,mb_post,mb_detailaddr,mb_tel1,mb_tel2,mb_tel3,
			mb_date,mb_bir,mb_type,mb_point,mb_tp,mb_rcid,mb_sms,mb_ckmail from (select rownum rn,members.*,grade.grade_name from members,grade where members.grade_no = grade.grade_no order by members.mb_no asc) where rn >=#{start} and rn <= #{start} + 49 and mb_leave =1	
		]]>
	</select>
	
	<delete id = "deleteMember" parameterType = "String">
		delete from members where mb_no =#{no}
	</delete>
	
	<insert id="insertGrade" parameterType = "vo.GradeVO" useGeneratedKeys="false">
		merge 
		into grade 
		using dual
		on(grade_no = #{grade_no})
		when matched then
		update
		set grade_name = #{grade_name}, grade_price= #{grade_price}, grade_per = #{grade_per}
		when not matched then
		insert(grade_no,grade_name,grade_price,grade_per)
		values(seq_grade_grade_no.nextval,#{grade_name},#{grade_price},#{grade_per})
	</insert>
	
	<delete id = "deleteGrade" parameterType = "String">
		delete from grade where grade_no =#{no}  
	</delete>

</mapper>












